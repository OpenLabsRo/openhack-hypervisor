// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/hypervisor/deployments": {
            "post": {
                "security": [
                    {
                        "HyperUserAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hypervisor Deployments"
                ],
                "summary": "Promote stage to deployment",
                "parameters": [
                    {
                        "description": "Promotion payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.promoteStageRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Deployment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errmsg._DeploymentInvalidRequest"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errmsg._StageNotFound"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errmsg._StageMissingEnv"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errmsg._InternalServerError"
                        }
                    }
                }
            }
        },
        "/hypervisor/hyperusers/login": {
            "post": {
                "description": "Validates hyperuser credentials and issues a short-lived bearer token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hyperusers Auth"
                ],
                "summary": "Hyperuser login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hyperusers.HyperUserLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hyperusers.HyperUserLoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errmsg._HyperUserInvalidPayload"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errmsg._HyperUserWrongPassword"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errmsg._HyperUserNotExists"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errmsg._InternalServerError"
                        }
                    }
                }
            }
        },
        "/hypervisor/hyperusers/ping": {
            "get": {
                "description": "Confirms the hyperusers service slice is online.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Hyperusers Meta"
                ],
                "summary": "Hyperusers health check",
                "responses": {
                    "200": {
                        "description": "PONG",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/hypervisor/hyperusers/whoami": {
            "get": {
                "security": [
                    {
                        "HyperUserAuth": []
                    }
                ],
                "description": "Returns the hyperuser extracted from the bearer token.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hyperusers Meta"
                ],
                "summary": "Current hyperuser profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.HyperUser"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errmsg._HyperUserNoToken"
                        }
                    }
                }
            }
        },
        "/hypervisor/meta/ping": {
            "get": {
                "description": "Lightweight heartbeat used by load balancers to confirm the Hypervisor API is alive.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Hypervisor Meta"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "PONG",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/hypervisor/meta/version": {
            "get": {
                "description": "Exposes the semantic version bundled with the running hypervisor service.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Hypervisor Meta"
                ],
                "summary": "Current deployment version",
                "responses": {
                    "200": {
                        "description": "v25.10.17.4",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/hypervisor/stages": {
            "get": {
                "security": [
                    {
                        "HyperUserAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hypervisor Stages"
                ],
                "summary": "List stages",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.listStagesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errmsg._InternalServerError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "HyperUserAuth": []
                    }
                ],
                "description": "Bootstraps a stage by cloning the release repo and seeding the template environment.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hypervisor Stages"
                ],
                "summary": "Prepare stage",
                "parameters": [
                    {
                        "description": "Stage details",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createStageRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Stage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errmsg._StageInvalidRequest"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errmsg._StageReleaseNotFound"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errmsg._StageAlreadyExists"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errmsg._InternalServerError"
                        }
                    }
                }
            }
        },
        "/hypervisor/stages/{stageId}": {
            "get": {
                "security": [
                    {
                        "HyperUserAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hypervisor Stages"
                ],
                "summary": "Get stage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stage identifier",
                        "name": "stageId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Stage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errmsg._StageNotFound"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errmsg._InternalServerError"
                        }
                    }
                }
            }
        },
        "/hypervisor/stages/{stageId}/sessions": {
            "get": {
                "security": [
                    {
                        "HyperUserAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hypervisor Stages"
                ],
                "summary": "List stage sessions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stage identifier",
                        "name": "stageId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.StageSession"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errmsg._StageNotFound"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errmsg._InternalServerError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "HyperUserAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hypervisor Stages"
                ],
                "summary": "Submit stage session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stage identifier",
                        "name": "stageId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Session payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createStageSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.stageSessionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errmsg._StageInvalidRequest"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errmsg._StageNotFound"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errmsg._InternalServerError"
                        }
                    }
                }
            }
        },
        "/hypervisor/stages/{stageId}/tests": {
            "post": {
                "security": [
                    {
                        "HyperUserAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hypervisor Stages"
                ],
                "summary": "Start stage test",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stage identifier",
                        "name": "stageId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Test payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.startStageTestRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.StageTestResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errmsg._StageInvalidRequest"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errmsg._StageNotFound"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errmsg._InternalServerError"
                        }
                    }
                }
            }
        },
        "/hypervisor/sync": {
            "post": {
                "description": "Triggers a Git pull of the releases repository to refresh available releases for staging.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hypervisor Sync"
                ],
                "summary": "Sync release metadata",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errmsg._InternalServerError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.StatusResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "api.createStageRequest": {
            "type": "object",
            "properties": {
                "envTag": {
                    "type": "string"
                },
                "releaseId": {
                    "type": "string"
                }
            }
        },
        "api.createStageSessionRequest": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "envText": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                }
            }
        },
        "api.listStagesResponse": {
            "type": "object",
            "properties": {
                "stages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Stage"
                    }
                }
            }
        },
        "api.promoteStageRequest": {
            "type": "object",
            "properties": {
                "stageId": {
                    "type": "string"
                }
            }
        },
        "api.stageSessionResponse": {
            "type": "object",
            "properties": {
                "session": {
                    "$ref": "#/definitions/models.StageSession"
                },
                "stage": {
                    "$ref": "#/definitions/models.Stage"
                }
            }
        },
        "api.startStageTestRequest": {
            "type": "object",
            "properties": {
                "sessionId": {
                    "type": "string"
                }
            }
        },
        "errmsg._DeploymentInvalidRequest": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "invalid deployment request payload"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "errmsg._HyperUserInvalidPayload": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "username and password must be provided"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "errmsg._HyperUserNoToken": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "no token has been provided"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 401
                }
            }
        },
        "errmsg._HyperUserNotExists": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "hyperuser does not exist"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 404
                }
            }
        },
        "errmsg._HyperUserWrongPassword": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "username or password is incorrect"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 401
                }
            }
        },
        "errmsg._InternalServerError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "internal server error: \u003cdetails\u003e"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 500
                }
            }
        },
        "errmsg._StageAlreadyExists": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "stage already exists"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 409
                }
            }
        },
        "errmsg._StageInvalidRequest": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "invalid stage request payload"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "errmsg._StageMissingEnv": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "stage is missing an environment submission"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 409
                }
            }
        },
        "errmsg._StageNotFound": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "stage not found"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 404
                }
            }
        },
        "errmsg._StageReleaseNotFound": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "release not found"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 404
                }
            }
        },
        "hyperusers.HyperUserLoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "hyperusers.HyperUserLoginResponse": {
            "type": "object",
            "properties": {
                "hyperuser": {
                    "$ref": "#/definitions/models.HyperUser"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "models.Deployment": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "envTag": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "promotedAt": {
                    "type": "string"
                },
                "stageId": {
                    "type": "string"
                },
                "status": {
                    "description": "staged|ready|stopped|deleted",
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "models.HyperUser": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.Stage": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "envTag": {
                    "type": "string"
                },
                "envText": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastTestResultId": {
                    "type": "string"
                },
                "latestSessionId": {
                    "type": "string"
                },
                "releaseId": {
                    "type": "string"
                },
                "repoPath": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.StageStatus"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.StageSession": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "envText": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "source": {
                    "description": "template|manual|import",
                    "type": "string"
                },
                "stageId": {
                    "type": "string"
                },
                "testResultId": {
                    "type": "string"
                }
            }
        },
        "models.StageStatus": {
            "type": "string",
            "enum": [
                "pre",
                "active",
                "promoted"
            ],
            "x-enum-varnames": [
                "StageStatusPre",
                "StageStatusActive",
                "StageStatusPromoted"
            ]
        },
        "models.StageTestResult": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "finishedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "logPath": {
                    "type": "string"
                },
                "sessionId": {
                    "type": "string"
                },
                "stageId": {
                    "type": "string"
                },
                "startedAt": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.StageTestStatus"
                },
                "wsToken": {
                    "type": "string"
                }
            }
        },
        "models.StageTestStatus": {
            "type": "string",
            "enum": [
                "running",
                "passed",
                "failed",
                "canceled",
                "error"
            ],
            "x-enum-varnames": [
                "StageTestStatusRunning",
                "StageTestStatusPassed",
                "StageTestStatusFailed",
                "StageTestStatusCanceled",
                "StageTestStatusError"
            ]
        }
    },
    "securityDefinitions": {
        "HyperUserAuth": {
            "description": "Provide the hyperuser bearer token as ` + "`" + `Bearer \u003ctoken\u003e` + "`" + `.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "25.10.17.4",
	Host:             "",
	BasePath:         "/hypervisor",
	Schemes:          []string{},
	Title:            "OpenHack Hypervisor API",
	Description:      "Hypervisor orchestration API for managing staged releases, deployments, and hyperuser access tooling.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
